-- Define plugins and their configurations using Lazy.nvim
return {
  -- DAP client for Neovim
  {
    'mfussenegger/nvim-dap',
    config = function()
      -- Load DAP keybindings and listeners here since this is the core DAP plugin
      local dap = require 'dap'
      local dapui = require 'dapui'

      -- Automatically open and close the DAP UI during debugging sessions
      dap.listeners.after.event_initialized['dapui_config'] = function()
        dapui.open()
      end
      dap.listeners.before.event_terminated['dapui_config'] = function()
        dapui.close()
      end
      dap.listeners.before.event_exited['dapui_config'] = function()
        dapui.close()
      end

      -- Set up keybindings for common debugging actions
      vim.keymap.set('n', '<F5>', dap.continue, { desc = 'Debug: Continue' })
      vim.keymap.set('n', '<F10>', dap.step_over, { desc = 'Debug: Step Over' })
      vim.keymap.set('n', '<F11>', dap.step_into, { desc = 'Debug: Step Into' })
      vim.keymap.set('n', '<F12>', dap.step_out, { desc = 'Debug: Step Out' })
      vim.keymap.set('n', '<leader>b', dap.toggle_breakpoint, { desc = 'Debug: Toggle Breakpoint' })
    end,
  },
  -- DAP UI for a better debugging interface
  {
    'rcarriga/nvim-dap-ui',
    dependencies = { 'mfussenegger/nvim-dap' },
    config = function()
      -- Configure DAP UI
      require('dapui').setup()
    end,
  },
  -- DAP configuration specifically for Go
  {
    'leoluz/nvim-dap-go',
    dependencies = { 'mfussenegger/nvim-dap' },
    config = function()
      -- Configure DAP for Go using Delve
      require('dap-go').setup()
    end,
  },
  -- -- Mason to manage the Delve debugger
  -- {
  --   'williamboman/mason.nvim',
  --   opts = function(_, opts)
  --     -- Extend the ensure_installed list to include delve
  --     opts.ensure_installed = opts.ensure_installed or {}
  --     table.insert(opts.ensure_installed, 'delve')
  --   end,
  -- },
}
